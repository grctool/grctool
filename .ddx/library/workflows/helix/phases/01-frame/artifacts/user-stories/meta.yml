# Metadata for User Stories

artifact:
  name: User Stories
  id: user-stories
  type: collection
  phase: frame

description: |
  User stories capture specific user needs and scenarios with clear
  acceptance criteria. They bridge the gap between business requirements
  and technical implementation.

dependencies:
  requires:
    - input: PRD
      type: artifact
      path: prd
      required: true
    - input: Feature specifications
      type: artifact
      path: feature-specification
      required: true

  enables:
    - output: Test cases
      type: artifact
      phase: test
    - output: Implementation tasks
      type: artifact
      phase: build

output:
  location: docs/helix/01-frame/user-stories/
  format: markdown
  naming: US-{number}-{feature}.md
  structure: per-feature

validation:
  required_elements:
    - story_format: "As a... I want... So that..."
    - acceptance_criteria: "Given... When... Then..."
    - definition_of_done
    - priority_level

  quality_checks:
    - check: story_completeness
      description: Each story must have all required elements
      severity: blocking

    - check: acceptance_testable
      description: Acceptance criteria must be testable
      severity: blocking

    - check: value_clear
      description: Business value must be explicit
      severity: warning

    - check: independence
      description: Stories should be independent when possible
      severity: info

  automated_checks:
    - pattern: "As a .* I want .* [Ss]o that"
      expected: ">0"
      message: Story must follow standard format

    - pattern: "Given .* When .* Then"
      expected: ">0"
      message: Must include acceptance criteria

variables:
  - name: feature_id
    description: FEAT-XXX identifier
    required: true

  - name: story_points
    description: Estimated effort in story points
    required: false

  - name: sprint_target
    description: Target sprint for completion
    required: false

prompts:
  generation: prompt.md
  review: |
    Review user stories for:
    1. User focus (not technical implementation)
    2. Clear value proposition
    3. Testable acceptance criteria
    4. Appropriate sizing
    5. Complete Definition of Done

template:
  file: template.md
  sections:
    - story_statement
    - acceptance_criteria
    - definition_of_done
    - validation_scenarios

examples:
  - file: example.md
    description: Sample user stories for template management feature

workflow:
  creation_order: 3
  review_cycles: 1-2
  approval_required: true
  approvers:
    - Product Owner
    - QA Lead

relationships:
  derived_from:
    - prd
    - feature-specification

  informs:
    - test-cases
    - implementation-plan

  grouped_by:
    - feature
    - epic
    - persona

estimation:
  method: story_points
  scale: fibonacci
  velocity_tracking: true

tracking:
  id_format: US-XXX
  id_scope: project
  status_values:
    - draft
    - ready
    - in_progress
    - testing
    - done
    - accepted

tags:
  - requirements
  - user-needs
  - acceptance
  - agile

version: 1.0.0
last_updated: 2024-01-14