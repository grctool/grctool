# Metadata for Principles Document

artifact:
  name: Project Principles
  id: principles
  type: document
  phase: frame

description: |
  Defines the core principles, constraints, and non-negotiable standards
  that will guide all development decisions throughout the project lifecycle.

dependencies:
  requires:
    - input: PRD
      type: artifact
      path: prd
      required: false
    - input: Technical constraints
      type: external
      required: true

  enables:
    - output: Architecture decisions
      type: artifact
      phase: design
    - output: Code standards
      type: artifact
      phase: build

output:
  location: docs/helix/01-frame/principles.md
  format: markdown
  naming: principles.md

validation:
  required_sections:
    - core_principles
    - technology_constraints
    - quality_standards
    - development_practices

  quality_checks:
    - check: principles_enforceable
      description: Each principle must be testable and enforceable
      severity: blocking

    - check: constraints_explicit
      description: Technology constraints must be specific
      severity: blocking

    - check: exceptions_documented
      description: Process for exceptions should be defined
      severity: warning

  automated_checks:
    - pattern: "Article \\d+:"
      expected: ">=10"
      message: Should reference core methodology articles

variables:
  - name: primary_language
    description: Primary programming language for the project
    required: true

  - name: framework_choice
    description: Primary framework if applicable
    required: false

  - name: deployment_target
    description: Target deployment environment
    required: true

prompts:
  generation: prompt.md
  review: |
    Review principles for:
    1. Enforceability
    2. Clarity
    3. Completeness
    4. Alignment with project goals
    5. Feasibility

template:
  file: template.md
  includes_references:
    - simplicity-driven-development
    - 12-factor-app
    - agile-manifesto

examples:
  - file: example.md
    description: Sample principles for a CLI toolkit project

workflow:
  creation_order: 2
  review_cycles: 1-2
  approval_required: true
  approvers:
    - Technical Lead
    - Architecture Team

relationships:
  informed_by:
    - prd

  enforced_in:
    - feature-specification
    - user-stories
    - solution-design
    - implementation

  referenced_by:
    - adr
    - code-review-checklist
    - test-strategy

monitoring:
  track_violations: true
  violation_log: docs/helix/principle-violations.log
  review_frequency: sprint

tags:
  - architecture
  - standards
  - constraints
  - governance

version: 1.0.0
last_updated: 2024-01-14