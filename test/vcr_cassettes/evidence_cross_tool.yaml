interactions:
- request:
    body: null
    form: {}
    headers:
      Accept:
      - application/vnd.github.v3+json
      Authorization:
      - token [REDACTED]
      User-Agent:
      - grctool/1.0
    method: GET
    uri: https://api.github.com/search/issues?q=security+policy+implementation+documentation+label%3Asecurity%2Cpolicy%2Cdocumentation
  response:
    body:
      string: |
        {
          "total_count": 3,
          "incomplete_results": false,
          "items": [
            {
              "id": 30,
              "number": 601,
              "title": "CC1.1: Security policy implementation and documentation",
              "state": "open",
              "body": "## Security Policy Implementation (CC1.1)\n\n### Policy Framework\n- **Information Security Policy**: Comprehensive policy covering all aspects of information security\n- **Access Control Policy**: Detailed access control procedures and standards\n- **Data Protection Policy**: Data classification and protection requirements\n- **Incident Response Policy**: Security incident handling procedures\n- **Change Management Policy**: Secure change management processes\n\n### Implementation Status\n✅ **Policy Development**\n- All policies developed with stakeholder input\n- Legal and compliance review completed\n- Executive approval and sign-off obtained\n- Version control and document management implemented\n\n✅ **Communication and Training**\n- Policy communication plan executed\n- All-hands training sessions conducted\n- Role-specific training materials developed\n- Annual policy acknowledgment process implemented\n\n### Technical Implementation\n- Security controls implemented per policy requirements\n- Monitoring and alerting systems configured\n- Regular policy compliance assessments scheduled\n- Continuous improvement process established\n\n### Evidence Documentation\n- Policy documents stored in controlled document repository\n- Training completion records maintained\n- Policy acknowledgment signatures collected\n- Compliance assessment reports generated quarterly",
              "user": {
                "login": "security-governance",
                "type": "User"
              },
              "labels": [
                {
                  "name": "security",
                  "color": "0075ca"
                },
                {
                  "name": "policy",
                  "color": "f9d0c4"
                },
                {
                  "name": "documentation",
                  "color": "c5def5"
                },
                {
                  "name": "cc1.1",
                  "color": "d4edda"
                }
              ],
              "created_at": "2024-08-02T14:15:00Z",
              "updated_at": "2024-08-20T16:30:00Z",
              "html_url": "https://github.com/test-org/test-repo/issues/601",
              "pull_request": null
            }
          ]
        }
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Status:
      - 200 OK
      X-RateLimit-Limit:
      - 5000
      X-RateLimit-Remaining:
      - 4991
    status:
      code: 200
      message: OK
- request:
    body: null
    form: {}
    headers:
      Accept:
      - application/vnd.github.v3+json
      Authorization:
      - token [REDACTED]
      User-Agent:
      - grctool/1.0
    method: GET
    uri: https://api.github.com/search/issues?q=change+management+approval+process+label%3Achange-management%2Capproval%2Cprocess
  response:
    body:
      string: |
        {
          "total_count": 2,
          "incomplete_results": false,
          "items": [
            {
              "id": 31,
              "number": 602,
              "title": "CC3.2: Change management approval process implementation",
              "state": "open",
              "body": "## Change Management Process (CC3.2)\n\n### Change Categories\n- **Standard Changes**: Pre-approved, low-risk changes with documented procedures\n- **Normal Changes**: Regular changes requiring CAB approval\n- **Emergency Changes**: High-priority changes with expedited approval process\n- **Major Changes**: High-risk changes requiring extensive review and approval\n\n### Approval Workflow\n1. **Change Request Submission**\n   - Detailed change description and justification\n   - Risk assessment and mitigation plan\n   - Implementation and rollback procedures\n   - Testing and validation plan\n\n2. **Review and Approval**\n   - Technical review by architecture team\n   - Security review by security team\n   - Business impact assessment\n   - Change Advisory Board (CAB) approval\n\n3. **Implementation**\n   - Scheduled implementation window\n   - Change implementation tracking\n   - Success criteria validation\n   - Post-implementation review\n\n### Automated Controls\n✅ **GitHub Integration**\n- Pull request workflow enforces change approval\n- Automated testing validates change quality\n- Deployment approvals require manager sign-off\n- Change tracking integrated with ITSM system\n\n### Compliance Evidence\n- All changes tracked in change management system\n- Approval workflows documented and auditable\n- Change success rate monitored and reported\n- Regular process improvement reviews conducted",
              "user": {
                "login": "change-management",
                "type": "User"
              },
              "labels": [
                {
                  "name": "change-management",
                  "color": "f9c74f"
                },
                {
                  "name": "approval",
                  "color": "0e8a16"
                },
                {
                  "name": "process",
                  "color": "c5def5"
                },
                {
                  "name": "cc3.2",
                  "color": "d4edda"
                }
              ],
              "created_at": "2024-08-08T11:20:00Z",
              "updated_at": "2024-08-19T13:45:00Z",
              "html_url": "https://github.com/test-org/test-repo/issues/602",
              "pull_request": null
            }
          ]
        }
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Status:
      - 200 OK
      X-RateLimit-Limit:
      - 5000
      X-RateLimit-Remaining:
      - 4990
    status:
      code: 200
      message: OK
- request:
    body: null
    form: {}
    headers:
      Accept:
      - application/vnd.github.v3+json
      Authorization:
      - token [REDACTED]
      User-Agent:
      - grctool/1.0
    method: GET
    uri: https://api.github.com/search/issues?q=data+protection+encryption+compliance+label%3Adata-protection%2Cencryption%2Ccompliance
  response:
    body:
      string: |
        {
          "total_count": 4,
          "incomplete_results": false,
          "items": [
            {
              "id": 32,
              "number": 603,
              "title": "CC6.8: Data protection and encryption compliance implementation",
              "state": "open",
              "body": "## Data Protection and Encryption (CC6.8)\n\n### Data Classification\n- **Public**: Information that can be freely shared\n- **Internal**: Information for internal use only\n- **Confidential**: Sensitive business information\n- **Restricted**: Highly sensitive information requiring special protection\n\n### Encryption Standards\n✅ **Data at Rest**\n- AES-256 encryption for all databases\n- KMS-managed encryption keys with automatic rotation\n- Encrypted storage for all file systems\n- Backup encryption with separate key management\n\n✅ **Data in Transit**\n- TLS 1.3 for all external communications\n- VPN encryption for remote access\n- API communications encrypted with mTLS\n- Internal service mesh with automatic encryption\n\n✅ **Key Management**\n- AWS KMS for cloud-based key management\n- Hardware Security Modules (HSM) for critical keys\n- Regular key rotation automated\n- Key access controls and audit logging\n\n### Technical Implementation\n- **Database Encryption**: PostgreSQL with transparent data encryption\n- **Application Encryption**: Field-level encryption for PII\n- **File Storage**: S3 buckets with server-side encryption\n- **Communication**: All APIs require HTTPS/TLS\n\n### Compliance Evidence\n- Encryption audit reports generated monthly\n- Key management procedures documented\n- Data classification assessment completed\n- Regular penetration testing validates encryption",
              "user": {
                "login": "data-protection",
                "type": "User"
              },
              "labels": [
                {
                  "name": "data-protection",
                  "color": "ff6b6b"
                },
                {
                  "name": "encryption",
                  "color": "4ecdc4"
                },
                {
                  "name": "compliance",
                  "color": "bfd4f2"
                },
                {
                  "name": "cc6.8",
                  "color": "d4edda"
                }
              ],
              "created_at": "2024-08-12T09:30:00Z",
              "updated_at": "2024-08-20T12:15:00Z",
              "html_url": "https://github.com/test-org/test-repo/issues/603",
              "pull_request": null
            }
          ]
        }
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Status:
      - 200 OK
      X-RateLimit-Limit:
      - 5000
      X-RateLimit-Remaining:
      - 4989
    status:
      code: 200
      message: OK
version: 1